{"version":3,"sources":["webpack://json-path-finder/./node_modules/flat/index.js","webpack://json-path-finder/./src/extension.ts","webpack://json-path-finder/external \"vscode\"","webpack://json-path-finder/webpack/bootstrap","webpack://json-path-finder/webpack/startup"],"names":["isBuffer","obj","constructor","keyIdentity","key","flatten","target","opts","delimiter","maxDepth","transformKey","output","step","object","prev","currentDepth","Object","keys","forEach","value","isarray","safe","Array","isArray","type","prototype","toString","call","isbuffer","isobject","newKey","length","module","exports","unflatten","overwrite","result","getkey","parsedKey","Number","isNaN","indexOf","reduce","val","isObject","isEmpty","keyPrefix","recipient","addKeys","split","map","key1","shift","key2","undefined","context","console","log","disposable","vscode","commands","registerCommand","doc","window","activeTextEditor","document","activeFilePath","fileName","toLowerCase","slice","jsonFile","JSON","parse","getText","selectedKey","selection","pathsFound","filter","path","includes","paths","splitPath","objKey","index","jsonPath","join","push","env","clipboard","writeText","showInformationMessage","str","showErrorMessage","subscriptions","search","k","hasOwnProperty","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","file":"extension.js","sourcesContent":["module.exports = flatten\nflatten.flatten = flatten\nflatten.unflatten = unflatten\n\nfunction isBuffer (obj) {\n  return obj &&\n    obj.constructor &&\n    (typeof obj.constructor.isBuffer === 'function') &&\n    obj.constructor.isBuffer(obj)\n}\n\nfunction keyIdentity (key) {\n  return key\n}\n\nfunction flatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const maxDepth = opts.maxDepth\n  const transformKey = opts.transformKey || keyIdentity\n  const output = {}\n\n  function step (object, prev, currentDepth) {\n    currentDepth = currentDepth || 1\n    Object.keys(object).forEach(function (key) {\n      const value = object[key]\n      const isarray = opts.safe && Array.isArray(value)\n      const type = Object.prototype.toString.call(value)\n      const isbuffer = isBuffer(value)\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      const newKey = prev\n        ? prev + delimiter + transformKey(key)\n        : transformKey(key)\n\n      if (!isarray && !isbuffer && isobject && Object.keys(value).length &&\n        (!opts.maxDepth || currentDepth < maxDepth)) {\n        return step(value, newKey, currentDepth + 1)\n      }\n\n      output[newKey] = value\n    })\n  }\n\n  step(target)\n\n  return output\n}\n\nfunction unflatten (target, opts) {\n  opts = opts || {}\n\n  const delimiter = opts.delimiter || '.'\n  const overwrite = opts.overwrite || false\n  const transformKey = opts.transformKey || keyIdentity\n  const result = {}\n\n  const isbuffer = isBuffer(target)\n  if (isbuffer || Object.prototype.toString.call(target) !== '[object Object]') {\n    return target\n  }\n\n  // safely ensure that the key is\n  // an integer.\n  function getkey (key) {\n    const parsedKey = Number(key)\n\n    return (\n      isNaN(parsedKey) ||\n      key.indexOf('.') !== -1 ||\n      opts.object\n    ) ? key\n      : parsedKey\n  }\n\n  function addKeys (keyPrefix, recipient, target) {\n    return Object.keys(target).reduce(function (result, key) {\n      result[keyPrefix + delimiter + key] = target[key]\n\n      return result\n    }, recipient)\n  }\n\n  function isEmpty (val) {\n    const type = Object.prototype.toString.call(val)\n    const isArray = type === '[object Array]'\n    const isObject = type === '[object Object]'\n\n    if (!val) {\n      return true\n    } else if (isArray) {\n      return !val.length\n    } else if (isObject) {\n      return !Object.keys(val).length\n    }\n  }\n\n  target = Object.keys(target).reduce(function (result, key) {\n    const type = Object.prototype.toString.call(target[key])\n    const isObject = (type === '[object Object]' || type === '[object Array]')\n    if (!isObject || isEmpty(target[key])) {\n      result[key] = target[key]\n      return result\n    } else {\n      return addKeys(\n        key,\n        result,\n        flatten(target[key], opts)\n      )\n    }\n  }, {})\n\n  Object.keys(target).forEach(function (key) {\n    const split = key.split(delimiter).map(transformKey)\n    let key1 = getkey(split.shift())\n    let key2 = getkey(split[0])\n    let recipient = result\n\n    while (key2 !== undefined) {\n      if (key1 === '__proto__') {\n        return\n      }\n\n      const type = Object.prototype.toString.call(recipient[key1])\n      const isobject = (\n        type === '[object Object]' ||\n        type === '[object Array]'\n      )\n\n      // do not write over falsey, non-undefined values if overwrite is false\n      if (!overwrite && !isobject && typeof recipient[key1] !== 'undefined') {\n        return\n      }\n\n      if ((overwrite && !isobject) || (!overwrite && recipient[key1] == null)) {\n        recipient[key1] = (\n          typeof key2 === 'number' &&\n          !opts.object ? [] : {}\n        )\n      }\n\n      recipient = recipient[key1]\n      if (split.length > 0) {\n        key1 = getkey(split.shift())\n        key2 = getkey(split[0])\n      }\n    }\n\n    // unflatten again for 'messy objects'\n    recipient[key1] = unflatten(target[key], opts)\n  })\n\n  return result\n}\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\nimport { flatten } from \"flat\";\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n  // Use the console to output diagnostic information (console.log) and errors (console.error)\n  // This line of code will only be executed once when your extension is activated\n  console.log(\"Json Path Finder says Hi!!\");\n\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with registerCommand\n  // The commandId parameter must match the command field in package.json\n  let disposable = vscode.commands.registerCommand(\n    \"json-path-finder.jsonPath\",\n    async () => {\n      // The code you place here will be executed every time your command is executed\n      // Display a message box to the user\n      try {\n        const doc = vscode.window.activeTextEditor?.document;\n        const activeFilePath = doc?.fileName.toString();\n        if (activeFilePath?.toLowerCase().slice(-4) === \"json\" && !!doc) {\n          const jsonFile = await JSON.parse(doc.getText());\n          const selectedKey = await doc.getText(\n            vscode.window.activeTextEditor?.selection\n          );\n          const pathsFound = Object.keys(flatten(jsonFile)).filter((path) => {\n            return path.includes(selectedKey);\n          });\n          const paths: string[] = [];\n          pathsFound.forEach((path) => {\n            let splitPath = path.split(\".\");\n            splitPath.forEach((objKey, index) => {\n              if (objKey == selectedKey) {\n                const jsonPath = splitPath.slice(0, index + 1).join(\".\");\n                !paths.includes(jsonPath) && paths.push(jsonPath);\n              }\n            });\n          });\n\n          if (paths.length === 1) {\n            await vscode.env.clipboard.writeText(paths[0]);\n            vscode.window.showInformationMessage(\"Path copied to clipboard\");\n          } else if (paths.length > 1) {\n            let str = \"\";\n            for (let path of paths) {\n              str += path + ', ';\n            }\n            vscode.window.showInformationMessage(str);\n            vscode.window.showInformationMessage(\n              \"Multiple Properties found with given name!! Take your one from below.\"\n            );\n          }\n\t\t  else {\n\t\t\tvscode.window.showInformationMessage(\n\t\t\t\t\"No paths found for selectedKey!\\nplease make sure to select the key without quotes.\"\n\t\t\t  );\n\t\t  }\n        } else {\n          vscode.window.showErrorMessage(\n            \"Please open JSON file before running Json Path\"\n          );\n        }\n      } catch {\n        vscode.window.showErrorMessage(\"Error! please try again\");\n      }\n    }\n  );\n\n  context.subscriptions.push(disposable);\n}\n\nexport function search(path: string, obj: any, target: string): any {\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k))\n      if (obj[k] === target) return path + \"['\" + k + \"']\";\n      else if (typeof obj[k] === \"object\") {\n        var result = search(path + \"['\" + k + \"']\", obj[k], target);\n        if (result) return result;\n      }\n  }\n  return false;\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(112);\n"],"sourceRoot":""}